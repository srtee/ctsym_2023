---
title: "Data Management and Reproducibility (CTCMS Symposium 2023)"
subtitle: "A Buffet Tasting"
author: "Shern Tee"
institute: "The University of Queensland"
date: today
bibliography: refs.bib
format: 
  revealjs:
    slide-number: true
    toc: true
    toc-depth: 1
    theme: uq.scss
    css: uq_metropolis.css
    footer: "Data Management and Reproducibility (CTCMS Symposium 2023)"
    logo: img/uq_logo.svg
    resources: img
    title-slide-attributes:
      data-background-image: img/corner_white.svg, img/swirl_white.svg, img/uq_logo0.svg, img/uq_title_center.png
      data-background-position: left bottom, right bottom, right 3% top, left bottom
      data-background-repeat: no-repeat, no-repeat, no-repeat, repeat
      data-background-size: 30% auto, 30% auto, 18% 12%, contain
fig-cap-location: margin
editor:
  render-on-save: true
---

## About Me

## Workshop Goals

- Define data management and reproducible research
- Identify broad principles for data management and reproducibility
- Find something to work on today!

# Data Management and Reproducibility {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/EvolutionOpenScience.jpg"
  data-background-position="left bottom, right bottom, center bottom 20%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 50%"
}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

## (Not) Managing Your Data

![Does your hard drive look like this? (Mine does.)](img/rdm-storage.jpg){fig-alt="Illustration shows two researchers rummaging 
through a closet full of unlabelled folders, skulls, mysterious vials, and cobwebs, looking for 'data from last year', 
as a warning about the dangers of poor data management."}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

## Every Researcher's Nightmare

::: {.columns}
:::: {.column width="50%"}
![An erroneous inversion in MsbA (green, left) was identified and corrected, leading to much more consistent structures (right) 
... and three retractions from _Science_.](nightmare.gif){fig-alt="Illustration on left shows two protein structures misaligned 
because of erroneous software analysis of one of the protein structures; on the right, the corrected analysis shows aligned structures."}
::::

:::: {.column width="45%"}


::::: {.callout-note icon="false"}

## [@nightmare]

::: {style="text-align: justify; margin-right: 0.5em;"}
When he investigated, Chang was horrified to discover that a homemade data analysis program had flipped two columns of data, 
inverting the electron-density map from which his team had derived the final protein structure. 
Unfortunately, his group had used the program to analyze data for other proteins.
:::

:::::
::::
:::


[[(Image source)](https://unsplash.com/photos/8OyKWQgBsKQ)]{.smalltext}

## Definitions of Reproducibility

![Definitions of reproducibility by The Turing Way 
[(link)](https://the-turing-way.netlify.app/reproducible-research/overview/overview-definitions.html),
DOI: 10.5281/zenodo.7684733.](img/reproducible-definition-grid.svg){width=700px height=525px fig-alt="A grid showing 
four definitions of reproducibility as researchers pouring components into machines to reproduce a landscape. Top left, 
'reproducible' research involves using the same data and same analysis to get the same results; top right, 'replicable' 
research involves using different data in the same analysis to get meaningful results; bottom left, 'robust' research 
involves using same data with different analyses to get consistent results; bottom right, 'generalisable' research 
involves using different data with different analyses to build a complex and complete picture."}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::


## Benefits of Reproducibility

![Benefits of reproducibility by The Turing Way 
[(link)](https://the-turing-way.netlify.app/reproducible-research/overview/overview-benefit.html),
DOI: 10.5281/zenodo.7684733.](img/reasons-reproducibility.png){fig-alt="Six benefits of reproducibility 
laid out in a grid. Clockwise from top left, reproducibility allows you: to track project history, more easily 
collaborate and review research with others, avoid misinformation about your research, ensure 
continuity between different lab members and end-users, get credited fairly for your research, and 
write your paper efficiently."}

## Barriers to Reproducibility

:::: {.columns}
::: {.column width="30%"}
![Richard Feynman (1918-1988), famous bongo player](img/feynman-13184-portrait-mini-2x.webp){width=100% fig-alt="Portrait of Richard Feynman, famous bongo player, sometimes physicist"}
:::

::: {.column width="60%"}

:::: {.callout-note icon="false"}

## [@feynman]

::: {style="text-align: justify; margin-right: 0.5em;"}
We have a habit in writing articles published in scientific journals to make the work as finished as possible, to cover all the tracks, to not worry about the blind alleys or to describe how you had the wrong idea first, and so on.

So there isn’t any place to publish, in a dignified manner, what you actually did in order to get to do the work, although, there has been in these days, some interest in this kind of thing.
:::
::::

:::
::::

## Reflection Exercise 1

What barriers to good data management and reproducibility have you encountered?

Navigate to `https://hackmd.io/@srtee/ctcms-2023-repro/edit` ...

## HackMD {.hide-title background-iframe="https://hackmd.io/\@srtee/ctcms-2023-repro/edit" background-interactive=true}

## A Buffet Tasting {
  data-background-image="img/buffet-unsplash.jpg"
  data-background-position="center bottom 10%"
  data-background-size="auto 25%"
}

::: {.columns}
:::: {.column width="40%"}
![You can't do it all at once -- grab what's useful!](img/ResearchTools.jpg){.smallertext fig-alt="Depiction of different tools 
as circles in a network, with four researchers each reaching out and grabbing different tools according to their needs."}
::::

:::: {.column width="50%"}

::::: {.callout-note .smallertext icon="false"}

## [@bromanrr]

_There are many paths toward reproducible research, and you shouldn’t try to change all aspects of your current practices all at once._
_Identify one weakness, adopt an improved approach, refine that a bit, and then move on to the next thing._  

:::::


::: {.smalltext}
{{< include _scriberia.qmd >}}
Buffet image from Unsplash [(link)](https://unsplash.com/photos/vJsj-hgOEG0)
:::


::::

:::


## Resources and Communities

::: {.columns}
:::: {.column width="35%"}

![The Turing Way -- an online community and handbook for reproducible, ethical and collaborative data science!](img/LogoDetailWithText.jpg)

::::

:::: {.column width="35%"}
![Everything's better when you do it together!](img/CommunityNetwork.jpg)
::::

:::: {.column width="30%" .smallertext}
This talk was inspired by a TTW Workshop on "Reproducible, Open and FAIR Research" [@TTWworkshop]
and Dan Katz's "Research Reproducibility" talk [@Katz_CompRepro].
::::
:::

## Overlapping concepts

:::: {.columns}
::: {.column width="40%"}
- Open Science
- FAIR Principles
  - Findable, Accessible, Interoperable, Reusable
- Data Management Plan
  - [UQ Library DMP Checklist](https://guides.library.uq.edu.au/for-researchers/research-data-management-plan/checklist)
:::

::: {.column width="60%"}
![](img/NIH_sharing.png)
[NIH DMS Policy](https://sharing.nih.gov/data-management-and-sharing-policy/about-data-management-and-sharing-policies/data-management-and-sharing-policy-overview){.smalltext 
fig-alt="Screenshot from NIH Data Management and Sharing Policy"}

![](img/fairmat.webp){.morepad 
fig-alt="Diagram of four components of the FAIRMat initiative: convincing people that data sharing advances science, developing
metadata and ontologies, developing reproducible workflows, and providing necessary infrastructure."}
[@fairmat]{.smalltext}
:::
::::

# Five Steps: ABCDE {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/EvolutionOpenScience.jpg"
  data-background-position="left bottom, right bottom, center bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 50%"
}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

## Five Steps {.illum-initial auto-animate=true}

. . .

### Automate

. . .

[Capture what you do so you can repeat it in one step -- then capture multiple steps in one!]{.smallertext}

. . .

### Backup

. . .

[Keep secure data copies in multiple locations]{.smallertext}

. . .

### Control

. . .

[Track changes in what you do and automate with version control]{.smallertext}

. . .

### Document

. . .

[Organize and name things well]{.smallertext}

. . .

### Export

. . .

[Capture your environment, licence your data, and make your work citeable]{.smallertext}

## A Typical Computational Workflow {.illum-initial auto-animate=true}

### Automate
### Backup
### Control
### Document
### Export

::: {.absolute top=100px left=100px}
```{dot}
digraph {
  rankdir=TD;
  1 [label="Prototyping"];
  2 [label="Production"];
  3 [label="Processing"];
  4 [label="Publication"];
  1->2; 2->3; 3->4; 3->1;
  {rank="same"; 3; 4}
}
```
:::

::: {.absolute top=200px left=650px width=300px}
Where you are will influence where you can start!
:::

## Where To Start (For Example!) {.illum-initial}

### Automate
### Backup
### Control
### Document
### Export

::: {.absolute top=100px left=100px}
```{dot}
digraph {
  rankdir=TD;
  1 [label=<Prototyping <FONT COLOR="RED">C, D</FONT>>];
  2 [label=<Production <FONT COLOR="RED">A</FONT>>];
  3 [label=<Processing <FONT COLOR="RED">A, D, E</FONT>>];
  4 [label="Publication"];
  1->2 [label=<<FONT COLOR="RED">B, E</FONT>>]; 
  2->3 [label=<<FONT COLOR="RED">B, C</FONT>>]; 
  3->4; 3->1;
  {rank="same"; 3; 4}
}
```
:::

::: {.absolute top=200px left=650px width=300px}
Where you are will influence where you can start!
:::

# Backup {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/data_crash.png"
  data-background-position="left bottom, right bottom, center bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 30%"
}

[Webcomic by The Upturned Microscope [(link)](https://theupturnedmicroscope.com/comic/flash-comic-february-2016/)]{.smalltext}

## The 3-2-1 Rule {.illum-initial
  data-background-image="img/data_crash.png"
  data-background-position="center bottom 10%"
  data-background-size="auto 30%"
}

:::: {.columns}
::: {.column width=50%}
### 3 copies of data, with

### 2 on different media on-site and

### 1 backup copy off-site
:::
::: {.smallertext .column width=50%}
::::: {.callout-note icon=false}
## Example
Work desktop + external HDD + RDM or GitHub (small files only!)
:::::
:::
::::

::: {.smallertext}
Make a _regular plan_! Helpful software: Rsync, Nextcloud, Syncthing

Synergizes with version control.
:::

[Webcomic by The Upturned Microscope [(link)](https://theupturnedmicroscope.com/comic/flash-comic-february-2016/)]{.smalltext}


# Document {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/file-management-manual.jpg"
  data-background-position="left bottom, right bottom, center bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 50%"
}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::


## Eight Step Filename Convention

1. What _files_ will this cover?
2. What _metadata_ am I tracking?
3. Will I _encode_ or abbreviate the metadata?
4. What _order_ should I list metadata in?
5. What _separator_ characters go between metadata?
6. Will I track different _versions_ of files?
7. Now _write down_ your naming convention pattern and some examples ...
8. ... and save it in a `NAMES.md` in your project folder.

[[@filename8steps], CC-BY 4.0]{.smalltext}

## Eight Step Filename Convention

```{.markdown filename="NAMES.md"}
_Files_: solvent trajectory DCD files
_Metadata_: potential difference, non-equilibrium force, trajectory date
_Encoding_: "V00" = 0.0 volts (2-pad), 
"F040" = 40 LAMMPS force units (3-pad), ISO8601 dates (YYYYMMDD)
_Order_ and _separator_: volts, force, date, separated with _
_Versions_: maybe during postprocessing I will combine
dated partial trajectories into a "full" trajectory?

_Final convention_:
"V"vv_"F"fff_YYYYMMDD.dcd *or* "V"vv_"F"fff_full.dcd

_Examples_:
V00_F040_20230415.dcd
(0.0 V, force 40 LAMMPS units, date 2023-04-15)
V25_F100_full.dcd
(2.5 V, force 100 LAMMPS units, combined from over multiple dates)
```

[[@filename8steps], CC-BY 4.0]{.smalltext}

## How To Name Files {.smallertext}

:::: {.columns}
::: {.column width=30%}
![](img/drakebling.jpg)
:::

::: {.column width=70%}
[.]{.smalltext color=#ffffff}


NO:

- `myabstract.docx`
- `Pictures of Space.jpg`
- `figure 1.png`
- `MwpktrimportantfinalFINAL.pdf`

YES:

- `2021-02-16_ctcms-abstract.docx`
- `better-pictures-of-space.jpg`
- `fig01_scatterplot-coffee-vs-paper-length.png`
- `1986-01-28_challenger-o-rings_raw-data.txt`
:::
::::

[[@howtonamethings]]{.smalltext}

## Three Principles: Good (File) Names Are {auto-animate="true"}

- Machine readable: "glob-friendly"
- Human readable: include a "slug"
  - `fig01_intro-pic.png`, `fig02_charge-vs-v.png`
    - underscores for machines, dashes for humans
- Easily sorted: list metadata in search-y order
  - Pad numbers and use YYYY-MM-DD dates (ISO 8601)

[[@howtonamethings]]{.smalltext}

## Three Principles: Good (File) Names Are {auto-animate="true"}

- Easily sorted: list metadata in search-y order
  - Pad numbers and use YYYY-MM-DD dates (ISO 8601)

::: {.columns .smallertext .lesslinespace}
:::: {.column width=60%}
::::: {.callout-note icon=false}
## ISO dates, done right:
Sorted order:

`2023-03-11_traj.dcd`

`2023-03-14_traj.dcd`

`2023-04-01_traj.dcd`

`2023-04-11_traj.dcd`

:::::

::::: {.callout-warning icon=false}
## Whoops!

:::::: {.columns}
::::::: {.column width=40%}
Sorted order:

`Apr11_traj.dcd`

`Apr1_traj.dcd`

`Mar11_traj.dcd`

`Mar14_traj.dcd`

`...`

:::::::

::::::: {.column width=40%}
Sorted order:

`traj_1-4.dcd`

`traj_11-3.dcd`

`traj_11-4.dcd`

`traj_14-3.dcd`

`...`

:::::::
[.]{.smalltext color=#ffffff}
::::::
:::::
::::

:::: {.column width=30%}
::::: {.callout-note icon=false}
## Padding numbers, done right:
Sorted order:

`01_read-trajectories.py`

`02_calc-msd.py`

`...`

`10_final-figs.py`

:::::

::::: {.callout-warning icon=false}
## Whoops!
Sorted order:

`10_final-figs.py`

`...`

`1_read-trajectories.py`

`2_calc-msd.py`

`...`

:::::
::::

:::

[[@howtonamethings]]{.smalltext}

## Directory Structures

![The "GIN-Tonic" research folder structure standard [@ginandtonic]. See [YODA](https://f1000research.com/posters/7-1965) or [Cookiecutter](https://drivendata.github.io/cookiecutter-data-science/) as alternatives.](img/gin-and-tonic.png){.morepad}

# Automate {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/file-management-digital-no-text.jpg"
  data-background-position="left bottom, right bottom, center bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 50%"
}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

## Automating (and simplifying) single steps {.smallertext}

Goal: Capture a procedure and make it repeatable in a simple, short step

1. Get a terminal
   - WSL is a fully-featured Linux environment in Windows!

2. Swap graphical-only for text-based procedures

![In future, you might not have to choose ...](img/keymouse.png){width=50%}

## From Graphical-Only to Text-Based

(P): Python package

| Activity      | Graphical     | Text-based                       |
|---------------|---------------|----------------------------------|
| Documents     | MS Word       | LaTeX, Markdown, Quarto          |
| Tables        | MS Excel      | Awk, (P) NumPy, (P) Pandas       |
| Graphs        | MS Excel      | (P) Matplotlib, Gnuplot, RStudio |
| Presentations | MS PowerPoint | LaTeX Beamer, Quarto             |

Integrated Development Environments (IDEs), like Spyder and VSCode, give you the best of all worlds: text-based inputs and graphical outputs

[and good practice for your decaying mouse-pointer skills]{.smalltext}

## Automating Plots

![Plotting with Python in the Spyder IDE. Python lets me generate multiple plots in a single for loop; you can (just about) see their consistent styling (far right vertical region).](img/spyder_plots.png)

## Simplifying Presentations

![Editing this presentation with Quarto in the VSCode IDE. No more worrying about getting that picture _exactly_ centered, or clicking through multiple directories to find it!](img/quarto.png)

## Automating a workflow

![After automating individual steps, you can fit them together into an automated workflow!](img/reproducible-pipeline-no-text.jpg){align=left}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

::: {.smallertext}
Tools to try: (Python) Snakemake, FireWorks, Signac, `make` ([TTW tutorial](https://the-turing-way.netlify.app/reproducible-research/make/make-examples.html))
:::


## Automating a workflow

Signac example:

:::{.columns .smallertext}

::::{.column width="50%"}

```{.python filename="project.py"}
lmp="$HOME/.local/bin/lmp_mpi"
@Project.pre.isfile('start.data')
@Project.post.isfile('restart.file.1')
@Project.operation(cmd=True)
def first_run(job):
    return f'{lmp} -in lammps.input'
      ' -var if_restart 0 ... '

@Project.pre.isfile('restart.file.1')
@Project.post.isfile('final.data')
@Project.operation(cmd=True)
def restart_run(job):
    return f'{lmp} -in lammps.input'
      ' -var if_restart 1 ... '
```

::::

::::{.column width="50%"}

```{.text filename="lammps.input"}
...
if "${if_restart} == 0" &
  then "read_data start.data"

if "${if_restart} == 1" &
  then "read_restart restart.file.1"
...
```

```{.shell filename="shell commands"}
$ python3 project.py status
$ python3 project.py submit \
  -o run_cpm [options] ...
```

::::
:::

## Readable and Reusable Code

![Learn to write _readable code_, and even better, code that is easily _reusable_ in future!](img/ReadableCode.jpg)

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

# Control and Export {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/community-exchange.jpg"
  data-background-position="left bottom, right bottom, center bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 50%"
}

::: {.smalltext}
{{< include _scriberia.qmd >}}
:::

## Version Control

![Change things quickly knowing you can always retrieve past versions! This is also an important pre-requisite for _continuous integration_.](img/VersionControl.jpg)

::: {.smalltext}
{{< include _scriberia.qmd >}}

[TTW guide on Version Control](https://the-turing-way.netlify.app/reproducible-research/vcs.html)
:::

## Git In One Slide

![For files in your _working directory_ that you care about, you **add** them to Git's _staging area_. To save a version of your _staging area_, you **commit** it to your _local repository_, which you can **push** to a _remote repository_ (like GitHub) for backup and sharing. You can **clone** a remote repository to your local repository and **pull** updated changes from the remote; you can then **merge** changes into your working directory, **checkout** other commits to try out other versions, and **revert** or **reset** to try fixing trickier issues.](img/git_flow.png)

::: {.smalltext}
Image from [Cosima Meyer's blog post](https://cosimameyer.com/post/git-the-perks-of-collaboration-and-version-control/), which is also a great short guide.
:::

## Export your work {.smallertext}

Sharing your computational environment:

- Python: `python -m pip freeze > requirements.txt` or `conda env export > environment.yml`
- More complex requirements:
  - _containers_ (Docker, Singularity / Apptainer), or
  - _reproducible build_ systems (EasyBuild, Spack)
- Jupyter Notebooks can "showcase" code with BinderHub or `nbdev`.

Hosting your data online:

- See PLOS ONE's [list of recommended repositories](https://journals.plos.org/plosone/s/recommended-repositories), and ask your university! (for example UQ's eSpace)
- Very important to get a DOI for citability!

Licensing your work: see last section of Dan Katz's slides [@Katz_CompRepro].

## Reflection Exercise 2

What one thing would you like to practice in the coming month?

Navigate to `https://hackmd.io/@srtee/ctcms-2023-repro/edit` ...

## HackMD {.hide-title background-iframe="https://hackmd.io/\@srtee/ctcms-2023-repro/edit" background-interactive=true}

## All the best on your reproducibility journey! {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/EvolutionOpenScience.jpg"
  data-background-position="left bottom, right bottom, center bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 50%"
}

## Acknowledgements {.headertop
  data-background-image="img/corner_uqviolet.svg, img/swirl_uqviolet.svg, img/EvolutionOpenScience.jpg"
  data-background-position="left bottom, right bottom, right 10% bottom 10%"
  data-background-repeat="no-repeat, no-repeat, no-repeat"
  data-background-size="15% auto, 15% auto, auto 30%"
}

::: {layout="[24,12,10]"}

![Prof Debra Bernhardt and the Bernhardt Group](img/Bernhardt_Group.jpeg)

![The Turing Way](img/LogoDetailWithText.jpg)

![Research Software Engineers Au-NZ](img/RSE_AUNZ_logo.png){.morepad}

:::

## References
